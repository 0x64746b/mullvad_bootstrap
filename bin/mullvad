#!/usr/bin/env python
# coding: utf-8


"""Manage your Mullvad VPN connection."""


from __future__ import (
    absolute_import,
    division,
    print_function,
    unicode_literals,
)


import argparse
import os
import sys

from mullvad import files, network, webapp


def _check_root():
    if os.geteuid() != 0:
        sys.exit(
            'This script has to be run as root in order to configure the VPN'
            ' service. Exiting.'
        )


def _remind_of_awesomeness():
    print(
        '\n'
        '*** Mullvad provides an awesome service!!1'
        ' Support them by adding a monthly subscription to your account.'
        ' Help keep the service alive! ***'
        '\n'
    )

def bootstrap(args):
    _check_root()

    mullvad = webapp.Client()
    try:
        config_file = mullvad.create_account(args.exit_country)
    except Exception as error:
        sys.exit('Failed to create account: {}'.format(error.message))
    else:
        config_dir = files.unzip(config_file)
        files.move(config_dir, network.OPENVPN_CONFIG_DIR)

    try:
        network.start_vpn_service()
    except Exception as error:
        sys.exit('Failed to connect to VPN: {}'.format(error.message))
    else:
        network.remove_unencrypted_default_routes()

    try:
        network.ping()
    except Exception as error:
        sys.exit('Failed to verify connectivity: {}'.format(error.message))
    else:
        network.check_external_ip()

    print('Successfully bootstrapped a Mullvad VPN account')


if __name__ == '__main__':
    main_command = argparse.ArgumentParser(description=__doc__)
    sub_commands = main_command.add_subparsers()

    bootstrap_command = sub_commands.add_parser('bootstrap')
    bootstrap_command.add_argument(
        '-e',
        '--exit-country',
        metavar='TLD',
        default='se',
        choices=['ca', 'de', 'nl','se', 'us'],
        help='select an exit country [default: %(default)s]',
    )

    cli_args = main_command.parse_args()

    _remind_of_awesomeness()

    bootstrap(cli_args)
